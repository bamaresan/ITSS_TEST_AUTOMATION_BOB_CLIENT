*-----------------------------------------------------------------------------
* <Rating>-108</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE TAUT.PRE.UPLOAD.PROCESS(OFS.QUEUE.ID)
*---------------------------------------------------------------------------*

* Author       : Sunder
* Date         : 15 Sep 2016
* Description  : Multi treaded routine to precheck any condition before the actual upload
*                job TAUT.OFS.UPLOAD.TARGET gets executed.
*---------------------------------------------------------------------------------------------
* Modifications
* 20161004  : Changes done to update TAUT.PARAMETER feed. This is important because any date change
*             for remaining application depends on the source date updated in the TAUT.PARAMETER.
* 20161005  : Changes to reset the user password and change the the end date and password validity
*---------------------------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.STANDARD.SELECTION
    $INSERT I_XML.EQUATE
    $INSERT I_GTS.COMMON
    $INSERT I_F.USER
    $INCLUDE TAUT.BP I_F.TAUT.PARAMETER
    $INCLUDE TAUT.BP I_F.TAUT.APPL.CHANGE
    $INCLUDE TAUT.BP I_TAUT.PRE.UPLOAD.PROCESS.COMMON


    READ R.STORE.FWD.QUEUE FROM F.STORE.FWD.QUEUE,OFS.QUEUE.ID ELSE
        LOG.LEVEL = 1         ;*Fatal
        TAUT.TEXT = 'Cannot Find the STORE OFS QUEUE Record: ':OFS.QUEUE.ID
        GOSUB UPDATE.TAUT.LOG
        RETURN
    END

    OFS.APPLICATION.NAME = FIELD(OFS.QUEUE.ID,'_',2)
    OFS.FUNC = FIELD(OFS.QUEUE.ID,'_',4)
    Y.USER = FIELD(OFS.QUEUE.ID,'_',6)

    BEGIN CASE
    CASE CONTROL.LIST<1,1> EQ "PASSWORD.RESET"
        GOSUB USER.PWD.RESET
    CASE CONTROL.LIST<1,1> EQ "TXN.CHNGES"
        GOSUB MODIFY.OFS.MESSAGE
    CASE 1

    END CASE

    RETURN
*------------------------------------------------------------------------------------------------*
MODIFY.OFS.MESSAGE:
*------------------
    IF ((OFS.APPLICATION.NAME EQ "LD.LOANS.AND.DEPOSITS" OR OFS.APPLICATION.NAME EQ "SWAP" OR OFS.APPLICATION.NAME EQ "TAUT.PARAMETER") AND OFS.FUNC EQ "I") THEN
        Y.SOURCE.TXN.ID = FIELD(OFS.QUEUE.ID,'_',3)
        Y.TAUT.APPL.ID = OFS.APPLICATION.NAME

        BEGIN CASE
        CASE OFS.APPLICATION.NAME EQ "LD.LOANS.AND.DEPOSITS"
            GOSUB LD.PROCESS
        CASE OFS.APPLICATION.NAME EQ "SWAP"
            GOSUB SWAP.PROCESS
*20161004 - S
        CASE OFS.APPLICATION.NAME EQ "TAUT.PARAMETER"
            GOSUB TAUT.PARAM.PROCESS
*20161004 - E
        END CASE

    END
    RETURN

LD.PROCESS:
*----------*

    IF RIGHT(R.STORE.FWD.QUEUE,2) EQ "//" THEN
        Y.LD.LEN = LEN(R.STORE.FWD.QUEUE)
        R.STORE.FWD.QUEUE = R.STORE.FWD.QUEUE[1,Y.LD.LEN-2]
    END

    Y.SELECTED.OFS.MSG = R.STORE.FWD.QUEUE
    GOSUB TG.MANDATORY.FIELD.CHECK
    Y.LD.ADD.FIELDS = Y.ADD.FIELDS
    GOSUB GET.SCHEDULE
    IF Y.LDS.OFS.MSG THEN
        R.STORE.FWD.QUEUE = R.STORE.FWD.QUEUE:Y.LD.ADD.FIELDS:"//": Y.LDS.OFS.MSG
        WRITE R.LDS.STORE.FWD.QUEUE TO F.TGT.UPLOAD.DONE,LDS.OFS.QUEUE.ID       ;* Move the LD schedule message to done folder and delete
        DELETE F.STORE.FWD.QUEUE,LDS.OFS.QUEUE.ID
    END ELSE
        R.STORE.FWD.QUEUE = R.STORE.FWD.QUEUE:Y.ADD.FIELDS
    END

    WRITE R.STORE.FWD.QUEUE TO F.STORE.FWD.QUEUE,OFS.QUEUE.ID         ;* Write LD and LD shedule define in a single message

    RETURN

UPDATE.TAUT.LOG:
*--------------*

    YID = ''
    CALL ALLOCATE.UNIQUE.TIME(YID)
    IF TAUT.TEXT EQ "" THEN
        TAUT.TEXT = "Critical Error :" :TIMEDATE()
    END
    WRITE TAUT.TEXT TO F.TAUT.LOG,YID

    RETURN
*------------------------------------------------------------------------------------------------*
GET.SCHEDULE:
*------------*

    LDS.SEL.CMD= 'SELECT ':STORE.FWD.QUEUE :" WITH @ID LIKE ...LD.SCHEDULE.DEFINE_":Y.SOURCE.TXN.ID:"..."

    CALL EB.READLIST(LDS.SEL.CMD,LDS.LIST,'','','')

    IF LDS.LIST THEN

        REMOVE LDS.OFS.QUEUE.ID FROM LDS.LIST SETTING LDS.QUE.POS

        READ R.LDS.STORE.FWD.QUEUE FROM F.STORE.FWD.QUEUE,LDS.OFS.QUEUE.ID ELSE
            LOG.LEVEL = 1     ;*Fatal
            TAUT.TEXT = 'Cannot Find the STORE OFS QUEUE Record: ':OFS.QUEUE.ID
            GOSUB UPDATE.TAUT.LOG
            RETURN
        END

        Y.TAUT.APPL.ID = FIELD(LDS.OFS.QUEUE.ID,'_',2)
        Y.SELECTED.OFS.MSG = R.LDS.STORE.FWD.QUEUE
        GOSUB TG.MANDATORY.FIELD.CHECK

        IF Y.ADD.FIELDS THEN
            R.LDS.STORE.FWD.QUEUE := Y.ADD.FIELDS
        END

        Y.FLD.CNT = DCOUNT(R.LDS.STORE.FWD.QUEUE,",")
        Y.LDS.OFS.MSG = FIELD(R.LDS.STORE.FWD.QUEUE,",",5,Y.FLD.CNT)
*        Y.STRING = "AMOUNT:1:1="
*        Y.LEN = LEN(Y.LDS.OFS.MSG)
*        STR.POS = INDEX(Y.LDS.OFS.MSG,Y.STRING,1)
*        Y.LDS.OFS.MSG = Y.LDS.OFS.MSG[1,STR.POS-1]:Y.STRING:"USD":Y.LDS.OFS.MSG[STR.POS+11,Y.LEN]

*        Y.FLD.CNT = DCOUNT(R.LDS.STORE.FWD.QUEUE,",")
*        Y.LDS.OFS.MSG = FIELD(R.LDS.STORE.FWD.QUEUE,",",5,Y.FLD.CNT)
*        Y.TEMP.MSG = Y.LDS.OFS.MSG
*        Y.STRING = "AMOUNT"
*        Y.AMT.CNT = DCOUNT(Y.TEMP.MSG,Y.STRING)
*        Y.TEMP.MSG = CHANGE(Y.TEMP.MSG,Y.STRING,FM)
*        Y.AMT.CNT = DCOUNT(Y.TEMP.MSG,FM)
*        FOR I = 1 TO Y.AMT.CNT
*            STR.POS = INDEX(Y.LDS.OFS.MSG,Y.STRING,I)
*            Y.LEN = LEN(Y.LDS.OFS.MSG)
*            Y.LDS.OFS.MSG = Y.LDS.OFS.MSG[1,STR.POS-1]:Y.STRING:Y.LDS.OFS.MSG[STR.POS+6,5]:"USD":Y.LDS.OFS.MSG[STR.POS+15,5]
*        NEXT I

    END

    RETURN
*------------------------------------------------------------------------------------------------*
TG.MANDATORY.FIELD.CHECK:
*************************

    R.TAUT.APPL.CHANGE = ''
    Y.ADD.FIELDS = ""
    CALL F.READ(FN.TAUT.APPL.CHANGE,Y.TAUT.APPL.ID,R.TAUT.APPL.CHANGE,F.TAUT.APPL.CHANGE,CHG.READ.ERR)
    IF R.TAUT.APPL.CHANGE NE "" THEN

        NO.OF.MD.FIELD = DCOUNT(R.TAUT.APPL.CHANGE<TAUT.APC.MANDATORY.FIELDS>,VM)
        Y.ADD.FIELDS = ""
        FOR MPOS=1 TO NO.OF.MD.FIELD
            MD.FIELD.NAME = R.TAUT.APPL.CHANGE<TAUT.APC.MANDATORY.FIELDS,MPOS>
            LOCATE MD.FIELD.NAME IN Y.SELECTED.OFS.MSG SETTING MFOUND.POS ELSE
                Y.ADD.FIELDS := ',': MD.FIELD.NAME :"::=":R.TAUT.APPL.CHANGE<TAUT.APC.FIELD.VALUE,MPOS>
            END
        NEXT MPOS

    END

    RETURN
*------------------------------------------------------------------------------------------------*
SWAP.PROCESS:
*-----------*

    RETURN
*------------------------------------------------------------------------------------------------*
*20161004 - S
TAUT.PARAM.PROCESS:
*-----------------*

    READ R.STORE.FWD.QUEUE FROM F.STORE.FWD.QUEUE,OFS.QUEUE.ID ELSE
        LOG.LEVEL = 1         ;*Fatal
        TAUT.TEXT = 'Cannot Find the STORE OFS QUEUE Record: ':OFS.QUEUE.ID
        GOSUB UPDATE.TAUT.LOG
        RETURN
    END

    theRequests = R.STORE.FWD.QUEUE
    theResponses = ''
    requestCommitted = ''

    GOSUB POST.OFS.MSG


    IF ERROR.FLAG = -1 THEN
        TAUT.TEXT = 'OFS Message Failed' :" * ": theRequests
        GOSUB UPDATE.TAUT.LOG
    END ELSE
        DELETE F.STORE.FWD.QUEUE,OFS.QUEUE.ID
    END

    RETURN

USER.PWD.RESET:
*--------------*
    LOCATE Y.USER IN Y.USER.ARRAY<1,1> SETTING USER.POS ELSE          ;* One reset to be done for one user.
        IF Y.USER.ARRAY EQ '' THEN
            Y.USER.ARRAY = Y.USER
        END ELSE
            Y.USER.ARRAY := VM:Y.USER
        END
        Y.OFS.MSG = "PASSWORD.RESET,TAUT/I/PROCESS,":TGT.OFS.USER:"/":TGT.OFS.PASSWORD:"/":ID.COMPANY:",,USER.RESET:1:1=":Y.USER:",USER.PASSWORD:1:1=":TGT.OFS.PASSWORD:",USER.TYPE:1:1=INT"

        theRequests = Y.OFS.MSG
        theResponses = ''
        requestCommitted = ''

        GOSUB POST.OFS.MSG

        R.USERR = ''
        CALL F.READ(FN.USER,Y.USER,R.USERR,F.USER,Y.USER.ERR)

        IF R.USERR THEN
            R.USERR<EB.USE.END.DATE.PROFILE> = "20501231"
            Y.PWD.VALIDITY = R.USERR<EB.USE.PASSWORD.VALIDITY>
            Y.LEN = LEN(Y.PWD.VALIDITY)
            R.USERR<EB.USE.PASSWORD.VALIDITY> = "20501231":Y.PWD.VALIDITY[9,Y.LEN]
            CALL F.WRITE(FN.USER,Y.USER,R.USERR)
        END
    END

    RETURN
*------------------------------------------------------------------------------------------------*
POST.OFS.MSG:
*----------*
    SAVE.APP = APPLICATION
    SAVE.V = V
    OFS.SRC.ID.BACKUP = OFS$SOURCE.ID
    OFS.SRC.REC.BACKUP = OFS$SOURCE.REC

    OFS$SOURCE.ID = OFS.SRC.ID
    OFS$SOURCE.REC = R.OFS.SOURCE

    CALL OFS.BULK.MANAGER(theRequests, theResponses, requestCommitted)

    APPLICATION = SAVE.APP
    V = SAVE.V
    OFS$SOURCE.ID  = OFS.SRC.ID.BACKUP
    OFS$SOURCE.REC = OFS.SRC.REC.BACKUP

    Y.OFS.MSG.ERROR.PART = theResponses['/',3,1]
    ERROR.FLAG = Y.OFS.MSG.ERROR.PART[',',1,1]

    RETURN
*20161005 - E
END

